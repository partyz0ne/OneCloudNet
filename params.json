{"name":"OneCloudNet","tagline":".Net client for 1cloud.ru service","body":"# **OneCloudNet**\r\n.Net client for 1cloud.ru service REST API.\r\n\r\n####Installation (NuGet)\r\n```csharp\r\nInstall-Package OneCloudNet\r\n```\r\n### Usage\r\n[OneCloudNetClient](https://github.com/partyz0ne/OneCloudNet/blob/master/OneCloudNet/Client/Client.cs) uses [RestSharp](https://github.com/restsharp/RestSharp).\r\n\r\n#### API token\r\n------------------------------\r\n\r\n1cloud.ru service requires uinique user API token for authorization, which is added to each request.\r\n\r\n```csharp\r\nString token = \"75bb9805c018b1267b2cf599a38b95a3a811e2ef7ad9ca5ed838ea4c6bafaf50\";\r\nIOneCloudNetClient client = new OneCloudNetClient(token);\r\n```\r\nSo far, supported methods are realized in two ways:\r\nAsynchronious calls:\r\n```csharp\r\nvoid GetImages(Action<List<Image>> success, Action<OneCloudException> failure);\r\nvoid GetServers(Action<List<Server>> success, Action<OneCloudException> failure);\r\nvoid GetServer(Int32 serverID, Action<Server> success, Action<OneCloudException> failure);\r\nvoid CreateServer(String name, Int32 cpu, Int32 ram, Int32 hdd, String imageID, Action<Server> success, Action<OneCloudException> failure);\r\nvoid ChangeServer(Int32 serverID, Int32 cpu, Int32 ram, Int32 hdd, Action<Action> success, Action<OneCloudException> failure);\r\nvoid DeleteServer(Int32 serverID, Action<IRestResponse> success, Action<OneCloudException> failure);\r\nvoid PowerServer(Int32 serverID, Power type, Action<Action> success, Action<OneCloudException> failure);\r\nvoid GetActions(Int32 serverID, Action<List<Action>> success, Action<OneCloudException> failure);\r\nvoid GetAction(Int32 serverID, Int32 actionID, Action<Action> success, Action<OneCloudException> failure);\r\n```\r\nand synchronious calls:\r\n```csharp\r\nIEnumerable<Image> GetImages();\r\nIEnumerable<Server> GetServers();\r\nServer GetServer(Int32 serverID);\r\nServer CreateServer(String name, Int32 cpu, Int32 ram, Int32 hdd, String imageID);\r\nAction ChangeServer(Int32 serverID, Int32 cpu, Int32 ram, Int32 hdd);\r\nBoolean DeleteServer(Int32 serverID);\r\nAction PowerServer(Int32 serverID, Power type);\r\nIEnumerable<Action> GetActions(Int32 serverID);\r\nAction GetAction(Int32 serverID, Int32 actionID);\r\n```\r\n\r\nMore features and documentation are coming soon.\r\n\r\nMore information about 1cloud.ru service and API is available at the\r\n[official website](http://www.1cloud.ru/).\r\n\r\n\r\n## License\r\nCode and documentation are available according to the *Apache* License (see [LICENSE](https://github.com/partyz0ne/OneCloudNet/blob/master/LICENSE)).","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}